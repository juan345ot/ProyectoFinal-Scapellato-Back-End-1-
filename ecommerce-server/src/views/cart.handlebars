<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carrito - {{cartId}}</title>
</head>
<body>
  <h2>Carrito {{cartId}}</h2>
  <ul id="cart-product-list" data-cart-id="{{cartId}}">
    {{#each cartProducts}}
      <li data-product-id="{{this.product._id}}">  
        {{this.product.title}} - 
        Cantidad: <input type="number" class="quantity-input" min="1" value="{{this.quantity}}"> -
        Precio unitario: ${{this.product.price}} - 
        <span class="subtotal">Subtotal: ${{multiply this.quantity this.product.price}}</span> -
        <button class="delete-product" data-product-id="{{this.product._id}}">Eliminar</button>
      </li>
    {{/each}}
  </ul>
  <script>
    const cartProductList = document.getElementById('cart-product-list');

    cartProductList.addEventListener('click', async (event) => {
      const listItem = event.target.closest('li'); 
      const productId = listItem.dataset.productId; 
      const cartId = cartProductList.dataset.cartId; // Asegúrate de que cartId está definido correctamente

      if (event.target.classList.contains('delete-product')) {
        try {
          const response = await fetch(`/api/carts/${cartId}/product/${productId}`, { // Aquí se usa cartId 
            method: 'DELETE'
          });

          if (response.ok) {
            const data = await response.json(); // Procesa la respuesta JSON
            if (data.status === 'success') { // Verifica el estado en la respuesta
              listItem.remove(); 
            } else {
              alert(`Error: ${data.error}`); 
            }
          } else {
            const data = await response.json(); // Procesa la respuesta JSON
            alert(`Error: ${data.error}`); 
          }
        } catch (error) {
          console.error('Error al realizar la solicitud:', error);
          alert('Error al comunicarse con el servidor'); 
        }

      } else if (event.target.classList.contains('quantity-input')) {
        const newQuantity = event.target.value;

        try {
          const response = await fetch(`/api/carts/${cartId}/product/${productId}`, { // Aquí se usa cartId
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ quantity: newQuantity })
          });

          if (response.ok) {
            const data = await response.json(); // Procesa la respuesta JSON
            if (data.status === 'success') { // Verifica el estado en la respuesta
              listItem.querySelector('.quantity-input').value = newQuantity; 
              listItem.querySelector('.subtotal').textContent = `Subtotal: $${(newQuantity * parseFloat(listItem.querySelector('.unit-price').textContent.replace('Precio unitario: $', ''))).toFixed(2)}`; 
            } else {
              alert(`Error: ${data.error}`); 
            }
          } else {
            const data = await response.json(); // Procesa la respuesta JSON
            alert(`Error: ${data.error}`); 
          }
        } catch (error) {
          console.error('Error al realizar la solicitud:', error);
          alert('Error al comunicarse con el servidor'); 
        }
      }
    });
  </script>
</body>
</html>

